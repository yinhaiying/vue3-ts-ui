(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-2d0ac36e"],{"191a":function(e,i){var p='<h1 id="介绍">介绍</h1> <p>本节将介绍sea-ui组件库的项目背景，设计原则以及其他项目相关。</p> <h2 id="项目背景">项目背景</h2> <p>随着Vue3.0正式版的发布，受到了非常多的关注，未来将会有更多的项目使用Vue3。本人也简单地学习了Vue的新语法，但是学不致用等于白学，因此希望能够使用Vue3.0新语法来做一些项目。相比于其他的简单的todo-list项目，一个复杂的UI框架无疑能够更好地锻炼自己的能力。而且也希望能够不断地去完善这个UI组件，在接下来自己的更多的个人项目中使用，也就是说要做一个未来能够在更多项目中使用的UI组件库。</p> <h2 id="设计原则">设计原则</h2> <h3 id="清晰-准确-exactly">清晰 准确 Exactly</h3> <p>语言表达清晰且表意明确，让开发者能够快速理解组件意图。</p> <p>面对大量信息和多维度的判断，我们希望在信息的视觉呈现、交互动效、提醒反馈等方面，做到清楚易读，不使用模糊和印象不清晰的视觉传达。例如看到一个组件就知道这个组件的用途是什么，比如message用于反馈信息。控件使用准确，文案表达精准，减少界面视觉元素的干扰,帮助用户快速达成目标，在最少的时间内获取更多的信息。从数据转化到可视表达做到不歪曲，不误导，不遗漏，忠实反映数据里包含的信息，不过度、不干扰，让开发者能够快速完成任务并进入下一个工作场景。</p> <h3 id="高效-简洁-efficiency">高效 简洁 Efficiency</h3> <p>ui组件库的使用最重要的两个目的就是：1. 统一样式。 2. 提高开发效率。代码编写本身就具有一定的学习成本，这与它的专业性不可分割，因此，sea-ui在设计上提供高效的使用体验，降低开发者学习成本，简化用户操作。利用用户习惯的交互方式，提升工作效率。</p> <h3 id="通用-包容-general">通用 包容 General</h3> <p>正如我们在上面所提到的，ui组件库的重要目的之一就是统一样式。sea-ui规范了平台整体的体验一致性，也要求组件能够灵活满足不同业务需求，符合大多数人的认知无论是设计的工具化还是页面的响应式，都需要我们准确的认知用户，考虑不同情况下的用户体验，包括不同情境、不同层级和角色的用户，对于使用情况应有优雅的兼容和无障碍的引导。</p> ';e.exports=p}}]);